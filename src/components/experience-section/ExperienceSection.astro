---
import SectionTitle from '../typography/SectionTitle.astro';
import Experience from './Experience.astro';
---

<section class="p-6">
  <SectionTitle>Experience</SectionTitle>
  <Experience
    title="Senior Frontend Engineer"
    companyName="CIRCL"
    companyWebsite="https://www.circl.solutions/"
    contractType="full-time"
    workModel="remote"
    startDate={new Date(2023, 10, 28)}
    endDate={new Date(2024, 3, 27)}
    skills={[
      'React.js',
      'TypeScript',
      'CSS',
      'Websocket',
      'Monorepo',
      'Microfrontends',
      'Iframe',
      'Git',
      'Vite.js',
    ]}
  >
    Logistics company needed to rebuild a huge monorepo-microfrontends legacy app. The challenge
    here was to integrate sections from legacy app into new app while it catches-up features-wise.
    The least “expensive” option was to use an iframe and develop a small communication protocol
    using postMessage.
  </Experience>

  <Experience
    title="Senior Frontend Engineer"
    companyName="Alviere"
    companyWebsite="https://alviere.com/"
    contractType="full-time"
    workModel="remote"
    startDate={new Date(2023, 3, 1)}
    endDate={new Date(2023, 9, 30)}
    skills={[
      'React.js',
      'TypeScript',
      'CSS',
      'REST APIs',
      'React-Query',
      'Axios',
      'Git',
      'Unit Testing',
      'Jest',
      'Vitest',
      'Vite.js',
    ]}
  >
    <p class="mb-2">Layoffs happened. Overnight we went from 4 frontend engineers to 2.</p>
    <p class="mb-2">
      A team of 1 lead + 1 developer wasn't making much sense so each of us was integrated into
      backend teams to form mixed ones instead.
    </p>
    <p class="mb-2">
      Backend &lt;-&gt; Frontend communication improved. Story slicing became vertical. Story points
      estimation is slightly more challenging, but we learned to live with it.
    </p>
    My most important achievements during this period are developer experience related:
    <ul class="ml-4 list-disc">
      <li>introducing more eslint rules and IDE automations to make our code more consistent</li>
      <li>
        migrating the whole project from CRA to Vite.js, which allowed us to finally move to latest
        React + Typescript versions and get rid of a ton of npm vulnerabilities. As a result we also
        cut in half the time it takes to run our CI/CD pipelines
      </li>
    </ul>
  </Experience>

  <Experience
    title="Lead Frontend Engineer"
    companyName="Alviere"
    companyWebsite="https://alviere.com/"
    contractType="full-time"
    workModel="remote"
    startDate={new Date(2021, 10, 1)}
    endDate={new Date(2023, 3, 30)}
    skills={[
      'Team Management',
      'React.js',
      'TypeScript',
      'CSS',
      'REST APIs',
      'React-Query',
      'Axios',
      'Git',
      'Unit Testing',
      'Jest',
    ]}
  >
    <p class="mb-2">
      The number of frontend developers eventually grew from 1 to 4 so the company decided to form a
      frontend team and make me it's "temporary" leader. It was going well enough so the search for
      an experienced frontend lead lost priority over time.
    </p>
    During this period my team implemented a major redesign of the whole app, built a number of custom
    components on top of MUI, integrated Storybook with Zeplin into the project, all while delivering
    new features in a SCRUM environment.
  </Experience>

  <Experience
    title="Frontend Developer"
    companyName="Alviere"
    companyWebsite="https://alviere.com/"
    contractType="full-time"
    workModel="remote"
    startDate={new Date(2020, 7, 1)}
    endDate={new Date(2021, 10, 30)}
    skills={[
      'Greenfield Development',
      'React.js',
      'TypeScript',
      'CSS',
      'REST APIs',
      'React-Query',
      'Axios',
      'Git',
      'Unit Testing',
    ]}
  >
    Rebuilding a 3 year old Angular app from scratch using React + Typescript. This was my first
    experience starting a greenfield project. At the time Create React App was still "cool" and
    actively maintained so that's what I used. Material-UI 5 for components and styling.
  </Experience>

  <Experience
    title="Web Developer"
    companyName="Mezu"
    companyWebsite="www.linkedin.com/company/mezu-inc"
    contractType="full-time"
    workModel="onsite"
    startDate={new Date(2018, 8, 1)}
    endDate={new Date(2020, 6, 30)}
    skills={[
      'Angular',
      'TypeScript',
      'NGRX',
      'RxJS',
      'CSS',
      'REST APIs',
      'Git',
      'Unit Testing',
      'Karma',
      'Jasmine',
      'MJML',
      'Gulp',
    ]}
  >
    Fintech startup building a cashless payments mobile app. I wasresponsible for maintaining and
    adding features to a huge Angular 2 backoffice app. This was my first contact with TypeScript
    which I absolutely loved and will never go back to vanilla JavaScript. Besides that, I also:
    <ul class="list-inside list-disc">
      <li>added features to company's landing page</li>
      <li>built hundreds of transactional email templates (MJML + gulp tasks)</li>
    </ul>
  </Experience>

  <Experience
    title="Web development intern"
    companyName="dev2grow"
    companyWebsite="https://www.dev2grow.com/"
    contractType="internship"
    workModel="onsite"
    startDate={new Date(2018, 3, 1)}
    endDate={new Date(2018, 6, 30)}
    skills={[
      'React.js',
      'JavaScript',
      'Redux',
      'RxJS',
      'Redux-observable',
      'CSS',
      'REST APIs',
      'Git',
    ]}
  >
    Mainly frontend development with React, including state management (redux) and libraries for
    async tasks (redux-observable[RxJS]), among others.
  </Experience>

  <Experience
    title="Web development intern"
    companyName="comOn"
    companyWebsite="https://comon.pt/"
    contractType="internship"
    workModel="onsite"
    startDate={new Date(2017, 3, 1)}
    endDate={new Date(2017, 7, 30)}
    skills={['React.js', 'JavaScript', 'Meteor.js', 'Redux', 'HTML', 'CSS', 'REST APIs', 'Git']}
  >
    The projects I worked on here included design and development of a REST api, advanced Slack
    integrations, also frontend programming and Chat Bot development using Google's <b>api.ai</b>.
    The technology stack included Meteor, React and Redux, among other JavaScript libraries and web
    apis.
  </Experience>
</section>
